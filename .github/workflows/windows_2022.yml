name: Windows-2022

on:
  push:
    branches:
      - main
      - 'dev**'
    tags:
      - '*'
  pull_request:
  schedule:
    - cron: '0 5 * * *'

  # allow manually starting this workflow
  workflow_dispatch:

env:
  VCPKG_PKGS: >-
    boost-dll boost-filesystem boost-algorithm
    boost-smart-ptr gtest

jobs:
  windows_ci:
    name: Windows-2022
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v4
      with:
        path: workspace/src/plugin_loader
    
    - name: configure-msvc
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: vcpkg build
      uses: johnwason/vcpkg-action@v7
      id: vcpkg
      with:
        pkgs: ${{ env.VCPKG_PKGS }}
        triplet: x64-windows-release
        cache-key: build-windows-2022
        token: ${{ github.token }}
    - name: install-depends
      shell: cmd
      run: |
        python -m pip install vcstool -q
        python -m pip install colcon-common-extensions -q
        python -m pip install ninja -q

    - name: update environment
      shell: bash
      run: |
        echo "PATH=${{ env.PATH }};$GITHUB_WORKSPACE\vcpkg\installed\x64-windows-release\bin" >> "$GITHUB_ENV"
        echo "CMAKE_PREFIX_PATH=$GITHUB_WORKSPACE\vcpkg\installed\x64-windows-release" >> "$GITHUB_ENV"

    - name: Build and Tests
      uses: tesseract-robotics/colcon-action@v13
      with:
        ccache-prefix: ${{ matrix.distro }}
        vcs-file: plugin_loader/dependencies.repos
        upstream-args: --cmake-args -G "Ninja" -DVCPKG_TARGET_TRIPLET=x64-windows-release -DCMAKE_BUILD_TYPE=Release
        target-path: workspace/src
        target-args: --cmake-args -G "Ninja" -DVCPKG_TARGET_TRIPLET=x64-windows-release -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=ON -DENABLE_CPACK=ON

    - name: Package
      if: ${{ github.event_name == 'release' && github.event.action == 'released' }}
      working-directory: workspace/build/boost_plugin_loader
      run: |
        cpack --config CPackConfig.cmake
        cp ./*.nupkg ${{ github.workspace }}/artifacts
        cp ./*.tar.xz ${{ github.workspace }}/artifacts

    - uses: actions/upload-artifact@v4
      if: ${{ github.event_name == 'release' && github.event.action == 'released' }}
      with:
        name: nuget_package
        path: ${{ github.workspace }}/artifacts/*.nupkg

    - uses: actions/upload-artifact@v4
      if: ${{ github.event_name == 'release' && github.event.action == 'released' }}
      with:
        name: archive_package
        path: ${{ github.workspace }}/artifacts/*.tar.xz
